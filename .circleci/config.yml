version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.11

jobs:
  build:
    docker:
      - image: 'circleci/python:latest'
    working_directory: /tmp/blog
    steps:
      - checkout
      - run:
          name: Create workspace directory
          command: |
            mkdir -p /tmp/workspace/published

      - restore_cache:
          name: Restore Python virtual environment cache
          keys:
          - v1-venv-build-content-{{ .Branch }}-{{ checksum "./requirements.txt" }}-
          - v1-venv-build-content-{{ .Branch }}-
          - v1-venv-build-content-
      - run:
          name: Create virtualenv
          command: |
            python3 -m venv /tmp/venv
      - run:
          name: Install dependencies
          command: |
            source /tmp/venv/bin/activate
            pip install --no-input --compile --exists-action=a -r ./requirements.txt
      - run:
          name: Build Pelican content
          command: |
            source /tmp/venv/bin/activate
            env SITEURL="http://mahmoudimus.com" python src/cli.py \
              --output /tmp/workspace/published \
              --delete-output-directory
      - save_cache:
          paths:
            - /tmp/venv/
          key: v1-venv-build-content-{{ .Branch }}-{{ checksum "./requirements.txt" }}-{{ epoch }}

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - published

  deploy-job:
    docker:
      - image: 'circleci/python:latest'
    environment:
      AWS_REGION: us-east-1
    working_directory: /tmp/workspace/published
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-s3/sync:
          from: .
          to: 's3://mahmoudimus.com/'
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
            --exclude ".git/*" \
            --exclude ".gitignore" \
            --exclude ".circleci/*" \
          overwrite: false

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-job:
          context: aws-s3-secrets
          requires:
            - build
          filters:
            branches:
              only: master
